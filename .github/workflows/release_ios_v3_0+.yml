name: Build iOS 3.0 -> 3.2.3

on:
  schedule:
    - cron: "0 0 1 * *"
  push:
    paths: 
      - '.github/workflows/release_ios_v3_0*.yml'
      - 'ios/**'
    branches: [ master ]
  pull_request:
    paths: 
      - 'ios/**'
    branches: [ master ]

env:
  TAG_NAME: iOS_v3.0+
  RELEASE_NAME: iOS Compiled files for v3.0+

jobs:
  download-google-mobile-ads-sdk:
    name: Download Google Mobile Ads SDK
    runs-on: "ubuntu-latest"
    
    steps:
    - name: Download, copy and unzip the lastest Google Mobile Ads SDK on release binaries and iOS module folder
      run: |
        curl -LO https://dl.google.com/googleadmobadssdk/googlemobileadssdkios.zip

    - name: Upload Google Mobile Ads SDK as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: googlemobileadssdkios.zip
        path: googlemobileadssdkios.zip

  ios-template:
    needs: [download-google-mobile-ads-sdk]
    name: Compiling for iOS
    runs-on: "macos-latest"
    strategy:
      matrix:
        GODOT_VERSIONS: [3.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.0.5, 3.0.6, 3.1, 3.1.1, 3.1.2, 3.2, 3.2.1, 3.2.2, 3.2.3]

    steps:
    - uses: actions/checkout@v2

    # Github Actions Matrix doesnt support x.0 values, it's replaced by ''
    - name: Verify current matrix's GODOT_VERSIONS
      run: |
        CURRENT_GODOT_VERSION=${{matrix.GODOT_VERSIONS}}
        if [ ${#CURRENT_GODOT_VERSION} -eq 1 ]; then CURRENT_GODOT_VERSION="${CURRENT_GODOT_VERSION}.0"; fi
        echo "CURRENT_GODOT_VERSION=${CURRENT_GODOT_VERSION}" >> $GITHUB_ENV

    # Upload cache on completion and check it out now
    - name: Load .scons_cache directory
      id: ios-template-cache
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/godot-${{env.CURRENT_GODOT_VERSION}}-stable/.scons_cache/
        key: ${{github.job}}-master-${{github.ref}}-${{github.sha}}
        restore-keys: |
          ${{github.job}}-master-${{github.ref}}-${{github.sha}}
          ${{github.job}}-master-${{github.ref}}
          ${{github.job}}-master

    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        # Semantic version range syntax or exact version of a Python version
        python-version: '3.x'
        # Optional - x64 or x86 architecture, defaults to x64
        architecture: 'x64'

    - name: Configuring Python packages
      run: |
        python -c "import sys; print(sys.version)"
        python -m pip install scons
        python --version
        scons --version

    - name: Download and unzip stable Godot version source code
      run: |
        FULL_PATHNAME_DOWNLOAD_GODOT_SOURCE_CODE="https://github.com/godotengine/godot/archive/${{env.CURRENT_GODOT_VERSION}}-stable.zip"
        curl -LO $FULL_PATHNAME_DOWNLOAD_GODOT_SOURCE_CODE
        unzip ${{env.CURRENT_GODOT_VERSION}}-stable.zip


    - name: Download Google Mobile Ads SDK Artifact
      uses: actions/download-artifact@v2
      with:
        name: googlemobileadssdkios.zip

    - name: Copy and unzip the Google Mobile Ads SDK on release binaries and iOS module folder
      run: |
        mkdir -p godot-${{env.CURRENT_GODOT_VERSION}}-stable/bin/release/
        unzip googlemobileadssdkios.zip -d ios/admob/lib/
        cd ios/admob/lib
        cd */
        mv * ../

    - name: Move the iOS module to Godot's /modules folder
      run: |
        mv ios/admob godot-${{env.CURRENT_GODOT_VERSION}}-stable/modules/

    - name: Compiles the Source Code
      env:
        SCONS_CACHE: ${{github.workspace}}/godot-${{env.CURRENT_GODOT_VERSION}}-stable/.scons_cache/
      run: |
        cd godot-${{env.CURRENT_GODOT_VERSION}}-stable
        scons p=iphone tools=no target=release arch=arm
        scons p=iphone tools=no target=release arch=arm64
        
        #ignore the 3.1 and 3.1.1 version for simulator due: https://github.com/godotengine/godot/issues/32301
        if [ ${{env.CURRENT_GODOT_VERSION}} != 3.1 ] && [ ${{env.CURRENT_GODOT_VERSION}} != 3.1.1 ]; then
          scons p=iphone tools=no target=release arch=x86_64
          lipo -create bin/libgodot.iphone.opt.arm.a bin/libgodot.iphone.opt.arm64.a bin/libgodot.iphone.opt.x86_64.a -output bin/release/libgodot.iphone.release.fat.a
        else
          lipo -create bin/libgodot.iphone.opt.arm.a bin/libgodot.iphone.opt.arm64.a -output bin/release/libgodot.iphone.release.fat.a
        fi
    - name: Compress the binaries
      run: |
        zip -j ios-template-v${{env.CURRENT_GODOT_VERSION}}.zip godot-${{env.CURRENT_GODOT_VERSION}}-stable/bin/release/*

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ios-template-v${{env.CURRENT_GODOT_VERSION}}.zip
        path: ios-template-v${{env.CURRENT_GODOT_VERSION}}.zip

  upload-assets-release:
    needs: [ios-template]
    name: Upload assets to release
    runs-on: ubuntu-latest
    steps:

    - name: Download artifacts
      uses: actions/download-artifact@v2
      
    - name: Delete previous tag
      uses: dev-drprasad/delete-tag-and-release@v0.1.2
      with:
        delete_release: true 
        tag_name: ${{env.TAG_NAME}}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release and tag
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{env.TAG_NAME}}
        release_name: ${{env.RELEASE_NAME}}
    
    - name: Upload artifacts to release
      uses: AButler/upload-release-assets@v2.0
      with:
        files: 'ios-template-*.zip/*;googlemobileadssdkios.zip/*'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        release-tag: ${{env.TAG_NAME}}
